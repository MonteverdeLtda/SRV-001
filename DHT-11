#include <Wire.h> 
#include "RTClib.h"
#include <LiquidCrystal_I2C.h>
#include <SimpleDHT.h>

LiquidCrystal_I2C lcd(0x27,16,2);
int PULSADOR = 2; 						// pin 2 para el pulsador
int LED=3; 								// pin 3 para el LED
int ESTADO=LOW; 						// estado inicial

int PINDHT11 = 9;
#define PINDHT11 PINDHT11

SimpleDHT11 dht11;
RTC_DS1307 RTC;
const int rs = 12, en = 11, d4 = 5, d5 = 4, d6 = 3, d7 = 2;

void setup(){
	Wire.begin(); 						// Inicia el puerto I2C 
	RTC.begin(); 						// Inicia la comunicaci¢n con el RTC
	// RTC.adjust(DateTime(__DATE__, __TIME__)); // Establece la fecha y hora (Comentar una vez establecida la hora)
	Serial.begin(9600); 				// Establece la velocidad de datos del puerto serie
	initLCD(); 							// Iniciar el LCD

	pinMode(PULSADOR, INPUT);
	pinMode(LED, OUTPUT);
	digitalWrite(LED, LOW);
}

void initLCD(){
  lcd.init();
  lcd.backlight();
  limpiarLCD();
}

void limpiarLCD(){
  lcd.clear();
}

void loop(){
	ESTADO = digitalRead(LED);
	if(ESTADO == 1){
		while(digitalRead(PULSADOR) == LOW){
			loopON();
		}
		digitalWrite(LED, !ESTADO);
		while(digitalRead(PULSADOR) == HIGH){
		}
	}else if(ESTADO == 0){
		loopOFF();
		detectOn();
	}
}

void detectOff(){
	ESTADO = digitalRead(LED);
	while(digitalRead(PULSADOR) == HIGH){
	}
	digitalWrite(LED, !ESTADO);
	while(digitalRead(PULSADOR) == LOW){
	}
}

void detectOn(){
	ESTADO = digitalRead(LED);
	while(digitalRead(PULSADOR) == LOW){
	}
	digitalWrite(LED, !ESTADO);
	while(digitalRead(PULSADOR) == HIGH){
	}
}

void loopON(){
	showLCDSimple();
}

void showLCDSimple(){
	// initDHT();
	// refrescarReloj(2);
	byte temperature = 0;
	byte humidity = 0;
	int err = SimpleDHTErrSuccess;
	if ((err = dht11.read(PINDHT11, &temperature, &humidity, NULL)) != SimpleDHTErrSuccess) {
		Serial.print("No reading , err=");
		Serial.println(err);
		
		limpiarLCD();
		lcd.setCursor(0,0);
		// lcd.print("No reading , err=");
		// lcd.setCursor(0,1);
		// lcd.print(err);
		// delay(1000);
		return;
	}
	
	Serial.print("yw: ");
	Serial.print(temperature); Serial.print(" Celcius, ");
	Serial.print((int)humidity); Serial.println(" %");

	
	limpiarLCD();
	DateTime now = RTC.now(); // Obtiene la fecha y hora del RTC
	Serial.print(now.year(), DEC); // A§o
	Serial.print('/');
	Serial.print(now.month(), DEC); // Mes
	Serial.print('/');
	Serial.print(now.day(), DEC); // Dia
	Serial.print(' ');
	Serial.print(now.hour(), DEC); // Horas
	Serial.print(':');
	Serial.print(now.minute(), DEC); // Minutos
	Serial.print(':');
	Serial.print(now.second(), DEC); // Segundos
	Serial.println();
	lcd.setCursor(0,0);
		lcd.print("T:");
		lcd.print(temperature);
		lcd.print(" "); 
		lcd.print(now.year(), DEC);
		lcd.print("/");
		lcd.print(now.month(), DEC);
		lcd.print("/");
		lcd.print(now.day(), DEC);
	lcd.setCursor(0,1);
		lcd.print("H:");
		lcd.print((int)humidity);
		lcd.print(" ");
		lcd.print(now.hour(), DEC);
		lcd.print(":");
		lcd.print(now.minute(), DEC);
		lcd.print(":");
		lcd.print(now.second(), DEC);
	delay(1000);
	
}


void loopOFF(){
	InfoDev();
	/*lcd.setCursor(0,0);
	lcd.print("APAGADO");
	delay(1000);
	limpiarLCD();
	lcd.setCursor(0,1);
	lcd.print("- APAGADO -");
	delay(1000);*/
}

void initDHT(){
	byte temperature = 0;
	byte humidity = 0;
	int err = SimpleDHTErrSuccess;
										// This bit will tell our Arduino what to do if there is some sort of an error at getting readings from our sensor
	if ((err = dht11.read(PINDHT11, &temperature, &humidity, NULL)) != SimpleDHTErrSuccess) {
		Serial.print("No reading , err=");
		Serial.println(err);
		
		limpiarLCD();
		lcd.setCursor(0,0);
		lcd.print("No reading , err=");
		lcd.setCursor(0,1);
		Serial.println(err);
		delay(1000);
		return;
	}
	Serial.print("yw: ");
	Serial.print(temperature); Serial.print(" Celcius, ");
	Serial.print((int)humidity); Serial.println(" %");

	limpiarLCD();
	lcd.setCursor(0,0);
	lcd.print("Temperatura: ");
	lcd.print(temperature);
	lcd.setCursor(0,1);
	lcd.print("Humedad (%): ");
	lcd.print((int)humidity);
	delay(1000);
	// refrescarReloj(3);
}

void refrescarReloj(int seg){
	for (int i = 0; i <= seg; i++) {
		limpiarLCD();
		DateTime now = RTC.now(); // Obtiene la fecha y hora del RTC
		Serial.print(now.year(), DEC); // A§o
		Serial.print('/');
		Serial.print(now.month(), DEC); // Mes
		Serial.print('/');
		Serial.print(now.day(), DEC); // Dia
		Serial.print(' ');
		Serial.print(now.hour(), DEC); // Horas
		Serial.print(':');
		Serial.print(now.minute(), DEC); // Minutos
		Serial.print(':');
		Serial.print(now.second(), DEC); // Segundos
		Serial.println();
		lcd.setCursor(0,0);
		lcd.print("Dia:   ");
		lcd.print(now.year(), DEC);
		lcd.print("/");
		lcd.print(now.month(), DEC);
		lcd.print("/");
		lcd.print(now.day(), DEC);
		lcd.print(" ");
		lcd.setCursor(0,1);
		lcd.print("Hora:  ");
		lcd.print(now.hour(), DEC);
		lcd.print(":");
		lcd.print(now.minute(), DEC);
		lcd.print(":");
		lcd.print(now.second(), DEC);
		delay(1000); // La informaci¢n se actualiza cada 1 seg.
	}
}

void InfoDev(){
  limpiarLCD();
  lcd.setCursor(0,0);
  lcd.print("Monteverde LTDA");
  lcd.setCursor(0,1);
  lcd.print("FelipheGomez.");
  delay(350);
}


